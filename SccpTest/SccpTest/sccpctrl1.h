#pragma once

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CSccpctrl1 wrapper class

class CSccpctrl1 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CSccpctrl1)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x7A8C7463, 0x738C, 0x4F63, { 0xAB, 0x50, 0x31, 0x64, 0x23, 0x96, 0xF, 0x6F } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName, LPCTSTR lpszWindowName, DWORD dwStyle,
						const RECT& rect, CWnd* pParentWnd, UINT nID, 
						CCreateContext* pContext = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); 
	}

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle, const RECT& rect, CWnd* pParentWnd, 
				UINT nID, CFile* pPersist = NULL, BOOL bStorage = FALSE,
				BSTR bstrLicKey = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); 
	}

// Attributes
public:


// Operations
public:

// _DSCCP

// Functions
//

	void AboutBox()
	{
		InvokeHelper(DISPID_ABOUTBOX, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
	}
	long OpenNet(LPCTSTR szIP, long nPort)
	{
		long result;
		static BYTE parms[] = VTS_BSTR VTS_I4 ;
		InvokeHelper(0x1, DISPATCH_METHOD, VT_I4, (void*)&result, parms, szIP, nPort);
		return result;
	}
	long OpenCom(long nComPort, long nBaudRate, long nParity, long nByteSize, long nStopBit)
	{
		long result;
		static BYTE parms[] = VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 ;
		InvokeHelper(0x2, DISPATCH_METHOD, VT_I4, (void*)&result, parms, nComPort, nBaudRate, nParity, nByteSize, nStopBit);
		return result;
	}
	long Close()
	{
		long result;
		InvokeHelper(0x3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
		return result;
	}
	long SetUp(long nTypeId)
	{
		long result;
		static BYTE parms[] = VTS_I4 ;
		InvokeHelper(0x4, DISPATCH_METHOD, VT_I4, (void*)&result, parms, nTypeId);
		return result;
	}
	long Config(long nTypeId)
	{
		long result;
		static BYTE parms[] = VTS_I4 ;
		InvokeHelper(0x5, DISPATCH_METHOD, VT_I4, (void*)&result, parms, nTypeId);
		return result;
	}
	long StarVideo()
	{
		long result;
		InvokeHelper(0x6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
		return result;
	}
	long StopVideo()
	{
		long result;
		InvokeHelper(0x7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
		return result;
	}
	long GetStatus()
	{
		long result;
		InvokeHelper(0x8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
		return result;
	}
	CString GetPlate()
	{
		CString result;
		InvokeHelper(0x9, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
		return result;
	}
	CString GetPlateColor()
	{
		CString result;
		InvokeHelper(0xa, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
		return result;
	}
	long SaveImage(LPCTSTR szPath, LPCTSTR szFileName, long nWidth, long nHeight, long nQuality, long nImageType)
	{
		long result;
		static BYTE parms[] = VTS_BSTR VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 ;
		InvokeHelper(0xb, DISPATCH_METHOD, VT_I4, (void*)&result, parms, szPath, szFileName, nWidth, nHeight, nQuality, nImageType);
		return result;
	}
	long SavePlateImage(LPCTSTR szPath, LPCTSTR szFileName)
	{
		long result;
		static BYTE parms[] = VTS_BSTR VTS_BSTR ;
		InvokeHelper(0xc, DISPATCH_METHOD, VT_I4, (void*)&result, parms, szPath, szFileName);
		return result;
	}
	long SavePlateBinImage(LPCTSTR szPath, LPCTSTR szFileName)
	{
		long result;
		static BYTE parms[] = VTS_BSTR VTS_BSTR ;
		InvokeHelper(0x14, DISPATCH_METHOD, VT_I4, (void*)&result, parms, szPath, szFileName);
		return result;
	}
	long Trigger()
	{
		long result;
		InvokeHelper(0x15, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
		return result;
	}

	CString GetIPAddr()
	{
		CString result;
		InvokeHelper(0x17, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
		return result;
	}

	long GetPort()
	{
		long result;
		InvokeHelper(0x18, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
		return result;
	}

	long SetSFZ(LPCTSTR name)
	{
		long result;
		static BYTE parms[] = VTS_BSTR ;
		InvokeHelper(0x19, DISPATCH_METHOD, VT_I4, (void*)&result, parms, name);
		return result;
	}

// Properties
//

long GetRecvPlateImageFlag()
{
	long result;
	GetProperty(0x10, VT_I4, (void*)&result);
	return result;
}
void SetRecvPlateImageFlag(long propVal)
{
	SetProperty(0x10, VT_I4, propVal);
}
long GetRecvImageFlag()
{
	long result;
	GetProperty(0x11, VT_I4, (void*)&result);
	return result;
}
void SetRecvImageFlag(long propVal)
{
	SetProperty(0x11, VT_I4, propVal);
}
long GetRecvPlateBinImageFlag()
{
	long result;
	GetProperty(0x12, VT_I4, (void*)&result);
	return result;
}
void SetRecvPlateBinImageFlag(long propVal)
{
	SetProperty(0x12, VT_I4, propVal);
}
long GetLogFile()
{
	long result;
	GetProperty(0x13, VT_I4, (void*)&result);
	return result;
}
void SetLogFile(long propVal)
{
	SetProperty(0x13, VT_I4, propVal);
}
BOOL GetDeviceInitOk()
{
	BOOL result;
	GetProperty(0x16, VT_BOOL, (void*)&result);
	return result;
}
void SetDeviceInitOk(BOOL propVal)
{
	SetProperty(0x16, VT_BOOL, propVal);
}


};
